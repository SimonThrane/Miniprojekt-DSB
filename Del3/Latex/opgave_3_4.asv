clear

[x, fs] = audioread('Symphony-sounds.wav');








%Create noise signal
t = linspace(-2*pi,2*pi,10000);
rng default
x = sin(t) + 0.25*rand(size(t));

%len = length(x);
fs = 48000;
%fc1 = 1200;
%tfc2 = 4800;
N = 10000;

d1 = FIR_WEIGHT(x,1,1,1,1,1);
df = fs/N;

X = fft(d1,fs);
X1 = fft(x,fs);


figure(1); clf
subplot(2,2,1)
semilogx(abs((2/N)*X(1:0.5*end)));

subplot(2,2,2)
semilogx(abs((2/N)*X1(1:0.5*end)));

subplot(2,2,3)
plot(x);

subplot(2,2,4)
plot(d1);


%[k1 f12] = FIR_bandpass_function(x,0,18000);

%k2 = fft(k1,fs);

%figure(2); clf
%subplot(2,1,1)
%semilogx(abs((2/N)*k2(1:0.5*end)));

%subplot(2,1,2)
%plot(k1);

%figure(3); clf
%plot(f12)


%m1 = round(fc1/df); %bin nummer der passer bedst
%m2 = round(fc2/df); %-||-


%filter1 = [zeros(1,m1) ones(1,abs(m1-m2)) zeros(1,N/2-m1-abs(m1-m2))];
%filter1 = [filter1 zeros(1,N/2-m1-abs(m1-m2)) ones(1,abs(m1-m2)) zeros(1,m1)]




%figure(1); clf
%plot(filter1);

%x1 = filter(filter_time,1,g);

%hann = hanning(N)';

%x1 = x1.*hann;

%X = fft(x1,fs);
%F = fft(filter_time);
%Y = fft(g,fs);

%clc;
%figure(2)
%subplot(3,1,1)
%semilogx(abs((2/N)*X(1:0.5*end)));
%subplot(3,1,2)
%semilogx(abs((2/N)*F(1:0.5*end)));
%subplot(3,1,3)
%semilogx(abs((2/N)*Y(1:0.5*end)));



